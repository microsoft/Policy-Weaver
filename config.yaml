keyvault:
  use_key_vault: <true if you use a key vault and secret names, false if you provide the secrets>
  name: <nameofkeyvault>
  authentication_method: <authentication method: currently possible: azure_cli or fabric_notebook>
fabric:
  mirror_id: <your fabric mirrored item id>
  mirror_name: <your fabric mirrored item name>
  workspace_id: <your fabric workspace id>
  tenant_id: <your fabric tenant id>
  fabric_role_suffix: PWPolicy
  delete_default_reader_role: true
  policy_mapping: < table_based or role_based , the first will create one role per table, the latter one role per dbx group/snowflake role>
constraints:
  columns:
    columnlevelsecurity: true
    fallback: deny
service_principal:
  client_id: <Depending on the keyvault setting: the keyvault secret name or your azure SP client id>
  client_secret: <Depending on the keyvault setting: the keyvault secret name or your azure SP secret>
  tenant_id: <Depending on the keyvault setting: the keyvault secret name or your azure tenant id again>
source:
  name: <your databricks catalog name as named in Azure Databricks>
type: SNOWFLAKE
databricks:
  workspace_url: https://adb-xxxxxxxxxxx.azuredatabricks.net/
  account_id: <your databricks account id>
  account_api_token: <Depending on the keyvault setting: the keyvault secret name or your databricks secret> 
snowflake:
  account_name: <name of the snowflake account>
  user_name: <user name to login>
  private_key_file: <path to the private key file>
  password: <password to login or passphrase for the private key if applicable>
  warehouse: <warehouse name>